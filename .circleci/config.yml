version: 2

defaults: &defaults
  working_directory: ~/org
  # Available images https://hub.docker.com/r/circleci/node/tags/

aliases:
  - &restore_yarn_cache
    name: Restore yarn cache
    keys:
      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-packages-{{ .Branch }}
      - yarn-packages-
  - &save_yarn_cache
    name: Save yarn cache
    paths:
      - ~/.cache/yarn
    key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
  - &filter_master
    branches:
      only: master
  - &attach
    at: ~/project

jobs:
  install:
    <<: *defaults
    docker:
      - image: circleci/node:16.7.0
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache
      - run: yarn install --frozen-lockfile
      - save_cache: *save_yarn_cache
      - store_artifacts:
          path: package.json
      - persist_to_workspace:
          root: ~/org
          paths:
            - .

  build:
    <<: *defaults
    docker:
      - image: circleci/node:16.7.0-browsers
      - image: browserless/chrome:1.50.0-puppeteer-1.20.0
    steps:
      - attach_workspace:
          at: ~/org
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Build
          command: yarn run build
      - run:
          name: Lint
          command: yarn run lint
      - run:
          name: Update spec
          command: yarn run spec
      - run:
          name: Unit tests
          command: |
            yarn jest --coverage --reporters=default --reporters=jest-junit
            if [ ! -z "$COVERALLS_REPO_TOKEN" ]; then
              echo "Uploading coverage results to coveralls.io..."
              cat ./coverage/lcov.info | npx coveralls
            fi
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./coverage/junit/
      - run:
          name: Rendering tests
          command: yarn run test:rendering
      - store_artifacts:
          path: ./test/rendering/__artifacts__
      - store_test_results:
          path: coverage/junit
      - persist_to_workspace:
          root: ~/org
          paths:
            - dist
            - package.json
            -core

#  publish-dev:
#    <<: *defaults
#    docker:
#      - image: circleci/node:16.7.0
#    steps:
#      - attach_workspace:
#          at: ~/org
#      - run: mv ./dist sn-org-chart && zip -r "sn-org-chart.zip" "./sn-org-chart"
#      - store_artifacts:
#          path: ./sn-org-chart.zip

  publish:
    <<: *defaults
    docker:
      - image: circleci/node:16.7.0
    steps:
      - attach_workspace:
          at: /org
      - run:
          name: Setup npm
          command: |
            set -eo pipefail
            # Amend auth token for access to public npm registry for @ nebula.js packages
            echo "//registry.npmjs. org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish
          command: |
            set -euo pipefail
            PROJ_VER=v$(cat package.json | jq -r '.version')
            TAG_NAME=$(git tag --points-at HEAD)

            if [ "$TAG_NAME" == "$PROJ_VER" ]
            then
              echo "Running >> npm publish"
              npm publish
            fi

  api-governance:
    machine: true
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Login for Docker
          command: echo $DOCKER_TOKEN | docker login -u "$DOCKER_USER" --password-stdin
      - run:
          name: API Governance Compliance
          command: |
            docker pull qlik/asmquery
            docker create -v /specs --name specs alpine:3.4 /bin/true
            docker cp ./api-specifications/properties.json specs:/specs
            docker run --volumes-from specs \
            -e target=Colony \
            -e runMode=failBuild \
            -e apiId=245cb876-11a2-4af2-a416-380b5446bb9d \
            -e specPath='/specs/properties.json' \
            -e commit="$CIRCLE_SHA1" qlik/asmquery

workflows:
  version: 2
  build-all:
    jobs:
      - install
      - build:
          requires:
            - install
      -api-governance:
        filters:
          branches:
            #Forked pull requests have CIRCLE_BRANCH set to pull/XXX
            ignore: /pull\/[0-9]+/
          tags:
            only:
              - /v.*/
      # - publish-dev:
      #     requires:
      #       - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only:
                - master
